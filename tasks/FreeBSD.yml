---
# zabbix64-proxy from offical repos only supports MySQL:
#
# 30432:20240729:154101.802 [Z3001] connection to database
# '/var/db/zabbix/zabbix_proxy.db' failed:
# [2002] Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)
#
# For sqlite use own package at pkg.in.meissner.it
#
# Upgrade of sqlite database is not possible - just remove it
# rm /var/db/zabbix/zabbix_proxy.db

- name: Set defaults
  ansible.builtin.set_fact:
    zabbix_proxy_db_dir: /var/db/zabbix
    zabbix_proxy_conf_dir2: /usr/local/etc/zabbix
    zabbix_proxy_confd_dir: /usr/local/etc/zabbix/zabbix_proxy.conf.d
    zabbix_proxy_conf_file: /usr/local/etc/{{ zabbix_server_pkg_name_prefix }}/zabbix_proxy.conf
    zabbix_proxy_service_name: zabbix_proxy

# pkg install first updates any out of date repository catalogues, unless
# REPO_AUTOUPDATE has been set to NO in pkg.conf.
# - name: Update packages
#   ansible.builtin.command: pkg update
#   changed_when: false

- name: Unlock package
  # We ignore all errors as we will get an exit code 1 if the package is
  # already locked and providing --show-locked doesn't have an effect here.
  ansible.builtin.command: pkg unlock --yes {{ zabbix_server_pkg_name_prefix }}-proxy
  failed_when: false
  register: pkg_lock
  changed_when: "'already unlocked' not in pkg_lock.stdout"

- name: Install zabbix-proxy
  # Using command instead of package as we have to provide the repo
  ansible.builtin.command: pkg install --repository meissner.IT --yes "{{ zabbix_server_pkg_name_prefix }}-proxy-{{ zabbix_server_version }}"
  changed_when: "'The most recent versions of packages are already installed' not in pkg_install.stdout"
  register: pkg_install
  notify: Restart zabbix-proxy

- name: Create {{ zabbix_proxy_confd_dir }} # noqa[name-template]
  ansible.builtin.file:
    path: "{{ zabbix_proxy_confd_dir }}"
    state: directory
    mode: "755"

# Don't upgrade from upstream
- name: Lock package
  # We use `--show-locked` here as without it we will get an exit code 1 if
  # the package is already locked.
  ansible.builtin.command: pkg lock --yes --show-locked {{ zabbix_server_pkg_name_prefix }}-proxy
  register: pkg_lock
  changed_when: "'already locked' not in pkg_lock.stdout"
